**io多路复用epoll实现
epoll解决了select链接数受限制，以及遍历轮训链接数耗时耗资源的问题，这都是
由epoll完全区别于select的实现决定的。但epoll仍然没有解决执行体太大导致的后续
请求延时严重的问题。

**用法三步曲：
第一步：epoll_create()系统调用。此调用返回一个句柄，之后所有的使用都依靠这个句柄来标识。
第二步：epoll_ctl()系统调用。通过此调用向epoll对象中添加、删除、修改感兴趣的事件，返回0标识成功，返回-1表示失败。
第三部：epoll_wait()系统调用。通过此调用收集收集在epoll监控中已经发生的事件。
